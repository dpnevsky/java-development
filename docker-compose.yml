# with 3 Zookeeper and 3 kafka

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  kafka-1:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  kafka-2:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: 2
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  kafka-3:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: 3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  topic-creator:
    image: confluentinc/cp-kafka:7.5.0
    container_name: topic-creator
    depends_on:
      - kafka-1
    entrypoint:
      - bash
      - -c
      - |
        #!/bin/bash
        set -e

        # Путь к Kafka CLI
        KAFKA_TOPICS="/usr/bin/kafka-topics"

        # Список топиков для создания
        TOPICS=("finish-registration" "create-documents" "send-documents" "send-ses" "credit-issued" "statement-denied")

        # Ожидание доступности Kafka
        echo "Waiting for Kafka to be ready..."
        while ! nc -z kafka-1 19092; do
          sleep 1
        done

        echo "Kafka is ready. Creating topics..."
        # Создание топиков
        for TOPIC in "$${TOPICS[@]}"; do
          "$$KAFKA_TOPICS" --bootstrap-server kafka-1:19092 --create --topic "$$TOPIC" --partitions 6 --replication-factor 3
        done

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8085"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092,kafka-2:19093,kafka-3:19094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

# with 1 ZOOKEEPER and 3 KAFKA
#
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.5.0
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    volumes:
#      - ./zookeeper-data:/var/lib/zookeeper/data
#    healthcheck:
#      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
#      interval: 15s
#      timeout: 10s
#      retries: 5
#
#  kafka1:
#    image: confluentinc/cp-kafka:7.5.0
#    container_name: kafka1
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#
#  kafka2:
#    image: confluentinc/cp-kafka:7.5.0
#    container_name: kafka2
#    ports:
#      - "9093:9093"
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#
#  kafka3:
#    image: confluentinc/cp-kafka:7.5.0
#    container_name: kafka3
#    ports:
#      - "9094:9094"
#    environment:
#      KAFKA_BROKER_ID: 3
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#
#
#  topic-creator:
#    image: confluentinc/cp-kafka:7.5.0
#    container_name: topic-creator
#    depends_on:
#      - kafka1
#    entrypoint:
#      - bash
#      - -c
#      - |
#        #!/bin/bash
#        set -e
#
#        # Путь к Kafka CLI
#        KAFKA_TOPICS="/usr/bin/kafka-topics"
#
#        # Список топиков для создания
#        TOPICS=("finish-registration" "create-documents" "send-documents" "send-ses" "credit-issued" "statement-denied")
#
#        # Ожидание доступности Kafka
#        echo "Waiting for Kafka to be ready..."
#        while ! nc -z kafka1 9092; do
#          sleep 1
#        done
#
#        echo "Kafka is ready. Creating topics..."
#
#        # Создание топиков
#        for TOPIC in "$${TOPICS[@]}"; do
#          "$$KAFKA_TOPICS" --bootstrap-server kafka1:9092 --create --topic "$$TOPIC" --partitions 6 --replication-factor 3 || \
#          echo "Topic $$TOPIC already exists"
#        done
#
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    container_name: kafka-ui
#    ports:
#      - "8080:8080"
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka1:9093,kafka1:9094
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#    depends_on:
#      - kafka1
#      - kafka2
#      - kafka3